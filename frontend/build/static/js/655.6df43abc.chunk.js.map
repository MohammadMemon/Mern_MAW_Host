{"version":3,"file":"static/js/655.6df43abc.chunk.js","mappings":"+UAyBeA,EAAc,SAACC,GAAD,gDAAW,WAAOC,GAAP,gGAElCA,EAAS,CAAEC,KAAMC,EAAAA,KAEXC,EAAS,CACbC,QAAS,CACP,eAAgB,qBANc,SASXC,IAAAA,KAAW,oBAAqBN,EAAOI,GAT5B,gBAS1BG,EAT0B,EAS1BA,KAERN,EAAS,CAAEC,KAAMM,EAAAA,GAAsBC,QAASF,IAXd,kDAalCN,EAAS,CACPC,KAAMQ,EAAAA,GACND,QAAS,KAAME,SAASJ,KAAKK,UAfG,0DAAX,uDAqBdC,EAAW,2DAAM,WAAOZ,GAAP,8FAE1BA,EAAS,CAAEC,KAAMY,EAAAA,KAFS,SAIHR,IAAAA,IAAU,qBAJP,gBAIlBC,EAJkB,EAIlBA,KAERN,EAAS,CAAEC,KAAMa,EAAAA,GAAmBN,QAASF,EAAKS,SANxB,gDAQ1Bf,EAAS,CACPC,KAAMe,EAAAA,GACNR,QAAS,KAAME,SAASJ,KAAKK,UAVL,yDAAN,uDAgBXM,EAAe,2DAAM,WAAOjB,GAAP,8FAE9BA,EAAS,CAAEC,KAAMiB,EAAAA,KAFa,SAIPb,IAAAA,IAAU,wBAJH,gBAItBC,EAJsB,EAItBA,KAERN,EAAS,CAAEC,KAAMkB,EAAAA,GAAoBX,QAASF,EAAKS,SANrB,gDAQ9Bf,EAAS,CACPC,KAAMmB,EAAAA,GACNZ,QAAS,KAAME,SAASJ,KAAKK,UAVD,yDAAN,uDAgBfU,EAAc,SAACC,EAAIvB,GAAL,gDAAe,WAAOC,GAAP,gGAEtCA,EAAS,CAAEC,KAAMsB,EAAAA,KAEXpB,EAAS,CACbC,QAAS,CACP,eAAgB,qBANkB,SASfC,IAAAA,IAAA,8BACEiB,GACvBvB,EACAI,GAZoC,gBAS9BG,EAT8B,EAS9BA,KAMRN,EAAS,CAAEC,KAAMuB,EAAAA,GAAsBhB,QAASF,EAAKmB,UAff,kDAiBtCzB,EAAS,CACPC,KAAMyB,EAAAA,GACNlB,QAAS,KAAME,SAASJ,KAAKK,UAnBO,0DAAf,uDAyBdgB,EAAc,SAACL,GAAD,gDAAQ,WAAOtB,GAAP,8FAE/BA,EAAS,CAAEC,KAAM2B,EAAAA,KAFc,SAIRvB,IAAAA,OAAA,8BAAoCiB,IAJ5B,gBAIvBhB,EAJuB,EAIvBA,KAERN,EAAS,CAAEC,KAAM4B,EAAAA,GAAsBrB,QAASF,EAAKmB,UANtB,gDAQ/BzB,EAAS,CACPC,KAAM6B,EAAAA,GACNtB,QAAS,KAAME,SAASJ,KAAKK,UAVA,yDAAR,uDAgBdoB,EAAkB,SAACT,GAAD,gDAAQ,WAAOtB,GAAP,8FAEnCA,EAAS,CAAEC,KAAM+B,EAAAA,KAFkB,SAIZ3B,IAAAA,IAAA,wBAA2BiB,IAJf,gBAI3BhB,EAJ2B,EAI3BA,KAERN,EAAS,CAAEC,KAAMgC,EAAAA,GAAuBzB,QAASF,EAAKP,QANnB,gDAQnCC,EAAS,CACPC,KAAMiC,EAAAA,GACN1B,QAAS,KAAME,SAASJ,KAAKK,UAVI,yDAAR,uDAgBlBwB,EAAc,2DAAM,WAAOnC,GAAP,sEAC/BA,EAAS,CAAEC,KAAMmC,EAAAA,KADc,2CAAN,wD,0NC2G7B,EA/NqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEtB,GAA2CC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,gBAAhEzC,EAAR,EAAQA,MAAO0C,EAAf,EAAeA,MAAO9B,EAAtB,EAAsBA,QAAS+B,EAA/B,EAA+BA,QAC/B,GAA0CJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMxC,SAAxD4C,EAAf,EAAQF,MAAoBG,EAA5B,EAA4BA,UActB5C,GAAW6C,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MAEd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACJZ,IACFK,EAAML,MAAMA,GACZzC,GAASmC,EAAAA,EAAAA,QAEPQ,IACFG,EAAML,MAAME,GACZ3C,GAASmC,EAAAA,EAAAA,QAEPS,IACFE,EAAMrB,QAAQ,8BACdzB,EAAS,CAAEC,KAAMqD,EAAAA,KAEf3C,GACFmC,EAAMrB,QAAQd,GAGhBX,GAAS+B,EAAAA,EAAAA,IAAgBM,EAAMkB,OAAOjC,OACrC,CAACtB,EAAU8C,EAAOL,EAAOJ,EAAMkB,OAAOjC,GAAIsB,EAAWD,EAAchC,KAGpE,UAAC,EAAA6C,SAAD,YACE,SAACC,EAAA,EAAD,CAAUC,MAAM,mBAChB,iBAAKC,UAAU,YAAf,WACE,SAAC,IAAD,KACA,gBAAKA,UAAU,sBAAf,SACGjB,GACC,SAACkB,EAAA,EAAD,KAEA,iBACED,UAAU,mBACVE,MAAO,CACLC,QAA+B,cAAtB/D,EAAMgE,YAA8B,QAAU,QAH3D,WAME,4BACE,iBAAKJ,UAAU,sBAAf,WACE,SAACK,EAAA,EAAD,6BACA,iBAAKL,UAAU,2BAAf,WACE,4BACE,kCACA,0BAAO5D,EAAMkE,MAAQlE,EAAMkE,KAAKC,WAElC,4BACE,mCACA,0BAAOnE,EAAMkE,MAAQlE,EAAMkE,KAAKd,YAElC,4BACE,mCACA,0BACGpD,EAAMoE,cAAgBpE,EAAMoE,aAAaC,cAG9C,4BACE,qCACA,0BACGrE,EAAMoE,cAAN,UACIpE,EAAMoE,aAAaE,QADvB,aACmCtE,EAAMoE,aAAaG,KADtD,aAC+DvE,EAAMoE,aAAa5B,MADlF,aAC4FxC,EAAMoE,aAAaI,QAD/G,aAC2HxE,EAAMoE,aAAaK,kBAKrJ,SAACR,EAAA,EAAD,uBACA,iBAAKL,UAAU,2BAAf,WACE,0BACE,cACEA,UACE5D,EAAM0E,aACuB,cAA7B1E,EAAM0E,YAAYxB,OACd,aACA,WALR,SAQGlD,EAAM0E,aACsB,cAA7B1E,EAAM0E,YAAYxB,OACd,OACA,gBAIR,4BACF,wCACA,0BAAOlD,EAAM2E,eAAiB3E,EAAM2E,oBAEtC,4BACE,sCACA,gCAAQ3E,EAAM4E,UAAY5E,EAAM4E,gBAElC,4BACE,sCACA,0BAAO5E,EAAM6E,YAAc7E,EAAM6E,iBAEnC,4BACE,sCACA,0BAAO7E,EAAM8E,eAAiB9E,EAAM8E,oBAEtC,4BACE,yCACA,0BAAO9E,EAAM+E,YAAc/E,EAAM+E,iBAE/B,4BACE,wCACA,0BAAO/E,EAAM0E,aAAe1E,EAAM0E,YAAYnD,YAIlD,SAAC0C,EAAA,EAAD,4BACA,gBAAKL,UAAU,2BAAf,UACE,0BACE,cACEA,UACE5D,EAAMgE,aAAqC,cAAtBhE,EAAMgE,YACvB,aACA,WAJR,SAOGhE,EAAMgE,aAAehE,EAAMgE,sBAKpC,iBAAKJ,UAAU,mBAAf,WACE,SAACK,EAAA,EAAD,gCACA,gBAAKL,UAAU,4BAAf,SACG5D,EAAMgF,YACLhF,EAAMgF,WAAWC,KAAI,SAACC,GAAD,OACnB,4BACE,gBAAKC,IAAKD,EAAKE,MAAOC,IAAI,aAC1B,UAAC,KAAD,CAAMC,GAAE,mBAAcJ,EAAKK,SAA3B,UACGL,EAAKf,MACN,gCAAQe,EAAKM,aACb,gCAAQN,EAAKO,YACb,gCAAQP,EAAKQ,cACP,KACR,4BACGR,EAAKS,SADR,YACsBT,EAAKU,MAD3B,KACoC,KAClC,kCAAKV,EAAKU,MAAQV,EAAKS,iBAVjBT,EAAKK,qBAkBzB,gBACEzB,MAAO,CACLC,QAA+B,cAAtB/D,EAAMgE,YAA8B,OAAS,SAF1D,UAKE,kBACEJ,UAAU,kBACViC,SA1KiB,SAACC,GAChCA,EAAEC,iBAEF,IAAMC,EAAS,IAAIC,SAEnBD,EAAOE,IAAI,SAAUhD,GAErB8C,EAAOE,IAAI,QAAS9C,GAEpBnD,GAASqB,EAAAA,EAAAA,IAAYgB,EAAMkB,OAAOjC,GAAIyE,KA+J1B,WAIE,2CAEA,4BACE,SAACG,EAAA,EAAD,KACA,oBAAQC,SAAU,SAACN,GAAD,OAAO3C,EAAU2C,EAAEO,OAAOC,QAA5C,WACE,mBAAQA,MAAM,GAAd,6BACuB,eAAtBtG,EAAMgE,cACL,mBAAQsC,MAAM,UAAd,qBAGqB,YAAtBtG,EAAMgE,cACL,mBAAQsC,MAAM,YAAd,8BAIN,iBAAK1C,UAAU,YAAf,WACE,SAAC2C,EAAA,EAAD,KACA,kBACErG,KAAK,QACLsG,YAAY,wBACZC,UAAQ,EACRtC,KAAK,QACLmC,MAAOlD,EACPgD,SAAU,SAACN,GAAD,OAAOzC,EAASyC,EAAEO,OAAOC,cAIvC,SAACI,EAAA,EAAD,CACEnF,GAAG,mBACHrB,KAAK,SACLyG,WACEhE,GAAqC,KAAXO,EAJ9B,uC,+LCjKlB,EAhDgB,WACd,OACE,iBAAKU,UAAU,UAAf,WACE,SAAC,KAAD,CAAM0B,GAAG,IAAT,UACE,gBAAKH,IAAKyB,EAAMvB,IAAI,kBAEtB,SAAC,KAAD,CAAMC,GAAG,mBAAT,UACE,0BACE,SAACuB,EAAA,EAAD,IADF,mBAIF,SAAC,KAAD,WACE,SAACC,EAAA,EAAD,CACEC,qBAAqB,SAACC,EAAA,EAAD,IACrBC,mBAAmB,SAACC,EAAA,EAAD,IAFrB,UAIE,UAACC,EAAA,EAAD,CAAUC,OAAO,IAAIC,MAAM,WAA3B,WACE,SAAC,KAAD,CAAM/B,GAAG,kBAAT,UACE,SAAC6B,EAAA,EAAD,CAAUC,OAAO,IAAIC,MAAM,MAAMC,MAAM,SAACC,EAAA,EAAD,SAGzC,SAAC,KAAD,CAAMjC,GAAG,iBAAT,UACE,SAAC6B,EAAA,EAAD,CAAUC,OAAO,IAAIC,MAAM,SAASC,MAAM,SAACE,EAAA,EAAD,gBAKlD,SAAC,KAAD,CAAMlC,GAAG,gBAAT,UACE,0BACE,SAACmC,EAAA,EAAD,IADF,eAKF,SAAC,KAAD,CAAMnC,GAAG,eAAT,UACE,0BACE,SAACoC,EAAA,EAAD,IADF,eAIF,SAAC,KAAD,CAAMpC,GAAG,iBAAT,UACE,0BACE,SAACqC,EAAA,EAAD,IADF,oB,oDCzCR,IATiB,SAAC,GAA2B,IAAzBhE,EAAwB,EAAxBA,MAAOiE,EAAiB,EAAjBA,YACzB,OACE,UAAC,IAAD,YACE,2BAAQjE,KACR,iBAAMQ,KAAK,cAAc0D,QAASD,S,yBCLpCE,EAAyBC,EAAQ,MAEjCC,EAA0BD,EAAQ,MAKtCE,EAAQ,OAAU,EAElB,IAAIC,EAAQF,EAAwBD,EAAQ,OAIxCI,GAAW,EAFML,EAAuBC,EAAQ,OAElBK,SAAuBF,EAAMG,cAAc,OAAQ,CACnFC,EAAG,2DACD,eAEJL,EAAQ,EAAUE,G,yBCjBdL,EAAyBC,EAAQ,MAEjCC,EAA0BD,EAAQ,MAKtCE,EAAQ,OAAU,EAElB,IAAIC,EAAQF,EAAwBD,EAAQ,OAIxCI,GAAW,EAFML,EAAuBC,EAAQ,OAElBK,SAAuBF,EAAMG,cAAc,OAAQ,CACnFC,EAAG,+HACD,eAEJL,EAAQ,EAAUE","sources":["actions/orderAction.js","component/Admin/ProcessOrder.js","component/Admin/Sidebar.js","component/layout/MetaData.js","../node_modules/@material-ui/icons/AccountTree.js","../node_modules/@material-ui/icons/MailOutline.js"],"sourcesContent":["import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS,\n  } from \"../constants/orderConstants\";\n  \n  import axios from \"axios\";\n  \n  // Create Order\n  export const createOrder = (order) => async (dispatch) => {\n    try {\n      dispatch({ type: CREATE_ORDER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n  \n      dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: CREATE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // My Orders\n  export const myOrders = () => async (dispatch) => {\n    try {\n      dispatch({ type: MY_ORDERS_REQUEST });\n  \n      const { data } = await axios.get(\"/api/v1/orders/me\");\n  \n      dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n      dispatch({\n        type: MY_ORDERS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get All Orders (admin)\n  export const getAllOrders = () => async (dispatch) => {\n    try {\n      dispatch({ type: ALL_ORDERS_REQUEST });\n  \n      const { data } = await axios.get(\"/api/v1/admin/orders\");\n  \n      dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n      dispatch({\n        type: ALL_ORDERS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Update Order\n  export const updateOrder = (id, order) => async (dispatch) => {\n    try {\n      dispatch({ type: UPDATE_ORDER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.put(\n        `/api/v1/admin/order/${id}`,\n        order,\n        config\n      );\n  \n      dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Delete Order\n  export const deleteOrder = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_ORDER_REQUEST });\n  \n      const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n  \n      dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: DELETE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get Order Details\n  export const getOrderDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: ORDER_DETAILS_REQUEST });\n  \n      const { data } = await axios.get(`/api/v1/order/${id}`);\n  \n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Clearing Errors\n  export const clearErrors = () => async (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n  };","import React, { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"../layout/MetaData\";\nimport \"./ProcessOrder.css\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport SideBar from \"./Sidebar\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport {\n  getOrderDetails,\n  clearErrors,\n  updateOrder,\n} from \"../../actions/orderAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport { Button } from \"@material-ui/core\";\nimport { UPDATE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nconst ProcessOrder = ({ match }) => {\n\n  const { order, error, message, loading } = useSelector((state) => state.orderDetails);\n  const { error: updateError, isUpdated } = useSelector((state) => state.order);\n\n  const updateOrderSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"status\", status);\n\n    myForm.set(\"email\", email);\n\n    dispatch(updateOrder(match.params.id, myForm));\n  };\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const [status, setStatus] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n    if (isUpdated) {\n      alert.success(\"Order Updated Successfully\");\n      dispatch({ type: UPDATE_ORDER_RESET });\n    }\n    if (message) {\n      alert.success(message);\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id, isUpdated, updateError , message]);\n\n  return (\n    <Fragment>\n      <MetaData title=\"Process Order\" />\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"newProductContainer\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <div\n              className=\"confirmOrderPage\"\n              style={{\n                display: order.orderStatus === \"Delivered\" ? \"block\" : \"grid\",\n              }}\n            >\n              <div>\n                <div className=\"confirmshippingArea\">\n                  <Typography>Shipping Info</Typography>\n                  <div className=\"orderDetailsContainerBox\">\n                    <div>\n                      <p>Name:</p>\n                      <span>{order.user && order.user.name}</span>\n                    </div>\n                    <div>\n                      <p>Email:</p>\n                      <span>{order.user && order.user.email}</span>\n                    </div>\n                    <div>\n                      <p>Phone:</p>\n                      <span>\n                        {order.shippingInfo && order.shippingInfo.phoneNo}\n                      </span>\n                    </div>\n                    <div>\n                      <p>Address:</p>\n                      <span>\n                        {order.shippingInfo &&\n                          `${order.shippingInfo.address}, ${order.shippingInfo.city}, ${order.shippingInfo.state}, ${order.shippingInfo.pinCode}, ${order.shippingInfo.country}`}\n                      </span>\n                    </div>\n                  </div>\n\n                  <Typography>Payment</Typography>\n                  <div className=\"orderDetailsContainerBox\">\n                    <div>\n                      <p\n                        className={\n                          order.paymentInfo &&\n                          order.paymentInfo.status === \"succeeded\"\n                            ? \"greenColor\"\n                            : \"redColor\"\n                        }\n                      >\n                        {order.paymentInfo &&\n                        order.paymentInfo.status === \"succeeded\"\n                          ? \"PAID\"\n                          : \"NOT PAID\"}\n                      </p>\n                    </div>\n\n                    <div>\n                  <p>Cart Total:</p>\n                  <span>{order.totalOldPrice && order.totalOldPrice}</span>\n                </div>\n                <div>\n                  <p>Discount:</p>\n                  <span>-{order.discount && order.discount}</span>\n                </div>\n                <div>\n                  <p>Subtotal:</p>\n                  <span>{order.itemsPrice && order.itemsPrice}</span>\n                </div>\n                <div>\n                  <p>Shipping:</p>\n                  <span>{order.shippingPrice && order.shippingPrice}</span>\n                </div>\n                <div>\n                  <p>Amount Paid:</p>\n                  <span>{order.totalPrice && order.totalPrice}</span>\n                </div>\n                    <div>\n                      <p>Payment Id:</p>\n                      <span>{order.paymentInfo && order.paymentInfo.id}</span>\n                    </div>\n                  </div>\n\n                  <Typography>Order Status</Typography>\n                  <div className=\"orderDetailsContainerBox\">\n                    <div>\n                      <p\n                        className={\n                          order.orderStatus && order.orderStatus === \"Delivered\"\n                            ? \"greenColor\"\n                            : \"redColor\"\n                        }\n                      >\n                        {order.orderStatus && order.orderStatus}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"confirmCartItems\">\n                  <Typography>Your Cart Items:</Typography>\n                  <div className=\"confirmCartItemsContainer\">\n                    {order.orderItems &&\n                      order.orderItems.map((item) => (\n                        <div key={item.product}>\n                          <img src={item.image} alt=\"Product\" />\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                            <span> {item.alphabet}</span>  \n                            <span> {item.nameOne}</span> \n                            <span> {item.nameTwo}</span> \n                          </Link>{\" \"}\n                          <span>\n                            {item.quantity} X ₹{item.price} ={\" \"}\n                            <b>₹{item.price * item.quantity}</b>\n                          </span>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n              {/*  */}\n              <div\n                style={{\n                  display: order.orderStatus === \"Delivered\" ? \"none\" : \"block\",\n                }}\n              >\n                <form\n                  className=\"updateOrderForm\"\n                  onSubmit={updateOrderSubmitHandler}\n                >\n                  <h1>Process Order</h1>\n\n                  <div>\n                    <AccountTreeIcon />\n                    <select onChange={(e) => setStatus(e.target.value)}>\n                      <option value=\"\">Choose Category</option>\n                      {order.orderStatus === \"Processing\" && (\n                        <option value=\"Shipped\">Shipped</option>\n                      )}\n\n                      {order.orderStatus === \"Shipped\" && (\n                        <option value=\"Delivered\">Delivered</option>\n                      )}\n                    </select>\n                  </div>\n                  <div className=\"userEmail\">\n                    <MailOutlineIcon />\n                    <input\n                      type=\"email\"\n                      placeholder=\"Paste User Email Here\"\n                      required\n                      name=\"email\"\n                      value={email} \n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n\n                  <Button\n                    id=\"createProductBtn\"\n                    type=\"submit\"\n                    disabled={\n                      loading ? true : false || status === \"\" ? true : false\n                    }\n                  >\n                    Process\n                  </Button>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProcessOrder;\n","import React  from \"react\";\nimport \"./Sidebar.css\";\nimport logo from \"../../images/logo.webp\";\nimport { Link } from \"react-router-dom\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"Myartworld\" />\n      </Link>\n      <Link to=\"/admin/dashboard\">\n        <p>\n          <DashboardIcon /> Dashboard\n        </p>\n      </Link>\n      <Link>\n        <TreeView\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ImportExportIcon />}\n        >\n          <TreeItem nodeId=\"1\" label=\"Products\">\n            <Link to=\"/admin/products\">\n              <TreeItem nodeId=\"2\" label=\"All\" icon={<PostAddIcon />} />\n            </Link>\n\n            <Link to=\"/admin/product\">\n              <TreeItem nodeId=\"3\" label=\"Create\" icon={<AddIcon />} />\n            </Link>\n          </TreeItem>\n        </TreeView>\n      </Link>\n      <Link to=\"/admin/orders\">\n        <p>\n          <ListAltIcon />\n          Orders\n        </p>\n      </Link>\n      <Link to=\"/admin/users\">\n        <p>\n          <PeopleIcon /> Users\n        </p>\n      </Link>\n      <Link to=\"/admin/reviews\">\n        <p>\n          <RateReviewIcon />\n          Reviews\n        </p>\n      </Link>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title, description}) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n};\n\nexport default MetaData;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;"],"names":["createOrder","order","dispatch","type","CREATE_ORDER_REQUEST","config","headers","axios","data","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","id","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","success","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","clearErrors","CLEAR_ERRORS","match","useSelector","state","orderDetails","error","loading","updateError","isUpdated","useDispatch","alert","useAlert","useState","status","setStatus","email","setEmail","useEffect","UPDATE_ORDER_RESET","params","Fragment","MetaData","title","className","Loader","style","display","orderStatus","Typography","user","name","shippingInfo","phoneNo","address","city","pinCode","country","paymentInfo","totalOldPrice","discount","itemsPrice","shippingPrice","totalPrice","orderItems","map","item","src","image","alt","to","product","alphabet","nameOne","nameTwo","quantity","price","onSubmit","e","preventDefault","myForm","FormData","set","AccountTree","onChange","target","value","MailOutline","placeholder","required","Button","disabled","logo","Dashboard","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ImportExport","TreeItem","nodeId","label","icon","PostAdd","Add","ListAlt","People","RateReview","description","content","_interopRequireDefault","require","_interopRequireWildcard","exports","React","_default","default","createElement","d"],"sourceRoot":""}