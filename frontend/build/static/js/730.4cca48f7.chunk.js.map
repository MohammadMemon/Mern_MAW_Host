{"version":3,"file":"static/js/730.4cca48f7.chunk.js","mappings":"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","sources":["actions/orderAction.js","component/Admin/OrderList.js","component/Admin/Sidebar.js","component/layout/MetaData.js"],"sourcesContent":["import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS,\n  } from \"../constants/orderConstants\";\n  \n  import axios from \"axios\";\n  \n  // Create Order\n  export const createOrder = (order) => async (dispatch) => {\n    try {\n      dispatch({ type: CREATE_ORDER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n  \n      dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: CREATE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // My Orders\n  export const myOrders = () => async (dispatch) => {\n    try {\n      dispatch({ type: MY_ORDERS_REQUEST });\n  \n      const { data } = await axios.get(\"/api/v1/orders/me\");\n  \n      dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n      dispatch({\n        type: MY_ORDERS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get All Orders (admin)\n  export const getAllOrders = () => async (dispatch) => {\n    try {\n      dispatch({ type: ALL_ORDERS_REQUEST });\n  \n      const { data } = await axios.get(\"/api/v1/admin/orders\");\n  \n      dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n      dispatch({\n        type: ALL_ORDERS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Update Order\n  export const updateOrder = (id, order) => async (dispatch) => {\n    try {\n      dispatch({ type: UPDATE_ORDER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.put(\n        `/api/v1/admin/order/${id}`,\n        order,\n        config\n      );\n  \n      dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Delete Order\n  export const deleteOrder = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_ORDER_REQUEST });\n  \n      const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n  \n      dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: DELETE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get Order Details\n  export const getOrderDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: ORDER_DETAILS_REQUEST });\n  \n      const { data } = await axios.get(`/api/v1/order/${id}`);\n  \n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Clearing Errors\n  export const clearErrors = () => async (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n  };","import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport {\n  deleteOrder,\n  getAllOrders,\n  clearErrors,\n} from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nconst OrderList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, orders } = useSelector((state) => state.allOrders);\n\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\n\n  const deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({ type: DELETE_ORDER_RESET });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 150,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.4,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 270,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/order/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteOrderHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  orders &&\n    orders.forEach((item) => {\n      rows.push({\n        id: item._id,\n        itemsQty: item.orderItems.length,\n        amount: item.totalPrice,\n        status: item.orderStatus,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL ORDERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL ORDERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderList;\n","import React  from \"react\";\nimport \"./Sidebar.css\";\nimport logo from \"../../images/logo.webp\";\nimport { Link } from \"react-router-dom\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"Myartworld\" />\n      </Link>\n      <Link to=\"/admin/dashboard\">\n        <p>\n          <DashboardIcon /> Dashboard\n        </p>\n      </Link>\n      <Link>\n        <TreeView\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ImportExportIcon />}\n        >\n          <TreeItem nodeId=\"1\" label=\"Products\">\n            <Link to=\"/admin/products\">\n              <TreeItem nodeId=\"2\" label=\"All\" icon={<PostAddIcon />} />\n            </Link>\n\n            <Link to=\"/admin/product\">\n              <TreeItem nodeId=\"3\" label=\"Create\" icon={<AddIcon />} />\n            </Link>\n          </TreeItem>\n        </TreeView>\n      </Link>\n      <Link to=\"/admin/orders\">\n        <p>\n          <ListAltIcon />\n          Orders\n        </p>\n      </Link>\n      <Link to=\"/admin/users\">\n        <p>\n          <PeopleIcon /> Users\n        </p>\n      </Link>\n      <Link to=\"/admin/reviews\">\n        <p>\n          <RateReviewIcon />\n          Reviews\n        </p>\n      </Link>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title, description}) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n};\n\nexport default MetaData;"],"names":["createOrder","order","dispatch","type","CREATE_ORDER_REQUEST","config","headers","axios","data","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","id","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","success","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","clearErrors","CLEAR_ERRORS","history","useDispatch","alert","useAlert","useSelector","state","allOrders","error","deleteError","isDeleted","useEffect","push","DELETE_ORDER_RESET","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","Fragment","to","onClick","rows","forEach","item","_id","itemsQty","orderItems","length","amount","totalPrice","status","orderStatus","title","className","pageSize","disableSelectionOnClick","autoHeight","src","logo","alt","Dashboard","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ImportExport","TreeItem","nodeId","label","icon","PostAdd","Add","ListAlt","People","RateReview","description","name","content"],"sourceRoot":""}