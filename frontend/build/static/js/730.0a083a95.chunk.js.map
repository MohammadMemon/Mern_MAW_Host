{"version":3,"file":"static/js/730.0a083a95.chunk.js","mappings":"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","sources":["component/Admin/OrderList.js","component/Admin/Sidebar.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport {\n  deleteOrder,\n  getAllOrders,\n  clearErrors,\n} from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nconst OrderList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, orders } = useSelector((state) => state.allOrders);\n\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\n\n  const deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({ type: DELETE_ORDER_RESET });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 150,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.4,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 270,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/order/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteOrderHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  orders &&\n    orders.forEach((item) => {\n      rows.push({\n        id: item._id,\n        itemsQty: item.orderItems.length,\n        amount: item.totalPrice,\n        status: item.orderStatus,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL ORDERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL ORDERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderList;\n","import React  from \"react\";\nimport \"./Sidebar.css\";\nimport logo from \"../../images/logo.webp\";\nimport { Link } from \"react-router-dom\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"Myartworld\" />\n      </Link>\n      <Link to=\"/admin/dashboard\">\n        <p>\n          <DashboardIcon /> Dashboard\n        </p>\n      </Link>\n      <Link>\n        <TreeView\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ImportExportIcon />}\n        >\n          <TreeItem nodeId=\"1\" label=\"Products\">\n            <Link to=\"/admin/products\">\n              <TreeItem nodeId=\"2\" label=\"All\" icon={<PostAddIcon />} />\n            </Link>\n\n            <Link to=\"/admin/product\">\n              <TreeItem nodeId=\"3\" label=\"Create\" icon={<AddIcon />} />\n            </Link>\n          </TreeItem>\n        </TreeView>\n      </Link>\n      <Link to=\"/admin/orders\">\n        <p>\n          <ListAltIcon />\n          Orders\n        </p>\n      </Link>\n      <Link to=\"/admin/users\">\n        <p>\n          <PeopleIcon /> Users\n        </p>\n      </Link>\n      <Link to=\"/admin/reviews\">\n        <p>\n          <RateReviewIcon />\n          Reviews\n        </p>\n      </Link>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":["history","dispatch","useDispatch","alert","useAlert","useSelector","state","allOrders","error","orders","order","deleteError","isDeleted","useEffect","clearErrors","success","push","type","DELETE_ORDER_RESET","getAllOrders","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","id","sortable","renderCell","Fragment","to","onClick","deleteOrder","rows","forEach","item","_id","itemsQty","orderItems","length","amount","totalPrice","status","orderStatus","title","className","pageSize","disableSelectionOnClick","autoHeight","src","logo","alt","Dashboard","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ImportExport","TreeItem","nodeId","label","icon","PostAdd","Add","ListAlt","People","RateReview"],"sourceRoot":""}