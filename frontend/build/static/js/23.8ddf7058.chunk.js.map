{"version":3,"file":"static/js/23.8ddf7058.chunk.js","mappings":"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","sources":["actions/orderAction.js","component/Order/OrderDetails.js","component/layout/MetaData.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS,\n  } from \"../constants/orderConstants\";\n  \n  import axios from \"axios\";\n  \n  // Create Order\n  export const createOrder = (order) => async (dispatch) => {\n    try {\n      dispatch({ type: CREATE_ORDER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n  \n      dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: CREATE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // My Orders\n  export const myOrders = () => async (dispatch) => {\n    try {\n      dispatch({ type: MY_ORDERS_REQUEST });\n  \n      const { data } = await axios.get(\"/api/v1/orders/me\");\n  \n      dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n      dispatch({\n        type: MY_ORDERS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get All Orders (admin)\n  export const getAllOrders = () => async (dispatch) => {\n    try {\n      dispatch({ type: ALL_ORDERS_REQUEST });\n  \n      const { data } = await axios.get(\"/api/v1/admin/orders\");\n  \n      dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n      dispatch({\n        type: ALL_ORDERS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Update Order\n  export const updateOrder = (id, order) => async (dispatch) => {\n    try {\n      dispatch({ type: UPDATE_ORDER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.put(\n        `/api/v1/admin/order/${id}`,\n        order,\n        config\n      );\n  \n      dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Delete Order\n  export const deleteOrder = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_ORDER_REQUEST });\n  \n      const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n  \n      dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: DELETE_ORDER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get Order Details\n  export const getOrderDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: ORDER_DETAILS_REQUEST });\n  \n      const { data } = await axios.get(`/api/v1/order/${id}`);\n  \n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Clearing Errors\n  export const clearErrors = () => async (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n  };","import React, { Fragment, useEffect } from \"react\";\nimport \"./OrderDetails.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport { getOrderDetails, clearErrors } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\n\nconst OrderDetails = ({ match }) => {\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Order Details\" />\n          <div className=\"orderDetailsPage\">\n            <div className=\"orderDetailsContainer\">\n              <Typography component=\"h1\">\n                Order #{order && order._id}\n              </Typography>\n              <Typography>Shipping Info</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p>Name:</p>\n                  <span>{order.user && order.user.name}</span>\n                </div>\n                <div>\n                  <p>Email:</p>\n                  <span>{order.user && order.user.email}</span>\n                </div>\n                <div>\n                  <p>Phone:</p>\n                  <span>\n                    {order.shippingInfo && order.shippingInfo.phoneNo}\n                  </span>\n                </div>\n                <div>\n                  <p>Address:</p>\n                  <span>\n                    {order.shippingInfo &&\n                      `${order.shippingInfo.address}, ${order.shippingInfo.city}, ${order.shippingInfo.state}, ${order.shippingInfo.pinCode}, ${order.shippingInfo.country}`}\n                  </span>\n                </div>\n              </div>\n              <Typography>Payment</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.paymentInfo &&\n                      order.paymentInfo.status === \"succeeded\" \n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.paymentInfo &&\n                    order.paymentInfo.status === \"succeeded\"\n                      ? \"PAID\"\n                      : \"NOT PAID\"}\n                  </p>\n                </div>\n                <div>\n                  <p>Cart Total:</p>\n                  <span>{order.totalOldPrice && order.totalOldPrice}</span>\n                </div>\n                <div>\n                  <p>Discount:</p>\n                  <span>-{order.discount && order.discount}</span>\n                </div>\n                <div>\n                  <p>Subtotal:</p>\n                  <span>{order.itemsPrice && order.itemsPrice}</span>\n                </div>\n                <div>\n                  <p>Shipping:</p>\n                  <span>{order.shippingPrice && order.shippingPrice}</span>\n                </div>\n                <div>\n                  <p>Amount Paid:</p>\n                  <span>{order.totalPrice && order.totalPrice}</span>\n                </div>\n                <div>\n                  <p>Payment Id:</p>\n                  <span>{order.paymentInfo && order.paymentInfo.id}</span>\n                </div>\n              </div>\n\n              <Typography>Order Status</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.orderStatus && order.orderStatus === \"Delivered\"\n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.orderStatus && order.orderStatus}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"orderDetailsCartItems\">\n              <Typography>Order Items:</Typography>\n              <div className=\"orderDetailsCartItemsContainer\">\n                {order.orderItems &&\n                  order.orderItems.map((item) => (\n                    <div key={item.product}>\n                      <img src={item.image} alt=\"Product\" />\n                      <Link to={`/product/${item.product}`}>\n                        {item.name}\n                        <span> {item.alphabet}</span>  \n                        <span> {item.nameOne}</span> \n                        <span> {item.nameTwo}</span> \n                      </Link>{\" \"}\n                      <span>\n                        {item.quantity} X ₹{item.price} ={\" \"}\n                        <b>₹{item.price * item.quantity}</b>\n                      </span>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default OrderDetails;","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title, description}) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n};\n\nexport default MetaData;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["createOrder","order","dispatch","type","CREATE_ORDER_REQUEST","config","headers","axios","data","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","id","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","success","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","clearErrors","CLEAR_ERRORS","match","useSelector","state","orderDetails","error","loading","useDispatch","alert","useAlert","useEffect","params","Fragment","Loader","MetaData","title","className","Typography","component","_id","user","name","email","shippingInfo","phoneNo","address","city","pinCode","country","paymentInfo","status","totalOldPrice","discount","itemsPrice","shippingPrice","totalPrice","orderStatus","orderItems","map","item","src","image","alt","to","product","alphabet","nameOne","nameTwo","quantity","price","description","content","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","React","props","ref","_props$align","align","classes","_props$color","color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","displayInline","displayBlock"],"sourceRoot":""}