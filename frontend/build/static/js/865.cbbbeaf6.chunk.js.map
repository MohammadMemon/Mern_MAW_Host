{"version":3,"file":"static/js/865.cbbbeaf6.chunk.js","mappings":"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","sources":["actions/cartAction.js","component/Cart/CheckoutSteps.js","component/Cart/Shipping.js","component/layout/MetaData.js"],"sourcesContent":["  import {\n    ADD_TO_CART,\n    REMOVE_CART_ITEM,\n    SAVE_SHIPPING_INFO,\n  } from \"../constants/cartConstants\";\n  import axios from \"axios\";\n  \n  // Add to Cart\n  export const addItemsToCart = (id, quantity, alphabet, nameOne, nameTwo) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n  \n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        product: data.product._id,\n        name: data.product.name,\n        price: data.product.price,\n        oldPrice: data.product.oldPrice,\n        image: data.product.images[0].url,\n        Stock: data.product.Stock,\n        quantity,\n        alphabet,\n        nameOne,\n        nameTwo,\n      },\n    });\n  \n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  };\n\n  // REMOVE FROM CART\n  export const removeItemsFromCart = (id) => async (dispatch, getState) => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: id,\n    });\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  };\n\n  // SAVE SHIPPING INFO\n  export const saveShippingInfo = (data) => async (dispatch) => {\n    dispatch({\n      type: SAVE_SHIPPING_INFO,\n      payload: data,\n    });\n\n    localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\n  };","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color: activeStep >= index ? \"#fa6643\" : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;","import React, { Fragment, useState } from \"react\";\nimport \"./Shipping.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveShippingInfo } from \"../../actions/cartAction\";\nimport MetaData from \"../layout/MetaData\";\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport TransferWithinAStationIcon from \"@material-ui/icons/TransferWithinAStation\";\nimport {  State } from \"country-state-city\";\nimport { useAlert } from \"react-alert\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps.js\";\n\nconst Shipping = ({ history }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { shippingInfo } = useSelector((state) => state.cart);\n\n  const [address, setAddress] = useState(shippingInfo.address);\n  const [city, setCity] = useState(shippingInfo.city);\n  const [state, setState] = useState(shippingInfo.state);\n  const [country, setCountry] = useState(shippingInfo.country);\n  const [pinCode, setPinCode] = useState(shippingInfo.pinCode);\n  const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\n\n  const shippingSubmit = (e) => {\n    e.preventDefault();\n\n    if (phoneNo.length < 10 || phoneNo.length > 10) {\n      alert.error(\"Phone Number should be 10 digits Long\");\n      return;\n    }\n    if (pinCode.length < 6 || pinCode.length > 6) {\n        alert.error(\"Pincode should be 6 digits Long\");\n        return;\n    }\n    dispatch(\n      saveShippingInfo({ address, city, state, country, pinCode, phoneNo })\n    );\n    history.push(\"/confirm/order\");\n  };\n \n\n  return (\n    <Fragment>\n      <MetaData title=\"Shipping Details\" />\n\n      <CheckoutSteps activeStep={0} />\n\n      <div className=\"shippingContainer\">\n        <div className=\"shippingBox\">\n          <h2 className=\"shippingHeading\">Shipping Details</h2>\n          <form\n            className=\"shippingForm\"\n            encType=\"multipart/form-data\"\n            onSubmit={shippingSubmit}\n          >\n            <div>\n              <HomeIcon />\n              <input\n                type=\"text\"\n                placeholder=\"Full Address\"\n                required\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <LocationCityIcon />\n              <input\n                type=\"text\"\n                placeholder=\"City\"\n                required\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <PinDropIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Pin Code\"\n                required\n                value={pinCode}\n                onChange={(e) => setPinCode(e.target.value)}\n                size=\"6\"\n              />\n            </div>\n\n            <div>\n              <PhoneIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Phone Number\"\n                required\n                value={phoneNo}\n                onChange={(e) => setPhoneNo(e.target.value)}\n                size=\"10\"\n              />\n            </div>\n\n            <div>\n              <PublicIcon />\n\n              <select\n                required\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n              >\n                <option value=\"\">Country</option>\n                <option value=\"IN\">India</option>\n              </select>\n            </div>\n\n            {country && (\n              <div>\n                <TransferWithinAStationIcon />\n\n                <select\n                  required\n                  value={state}\n                  onChange={(e) => setState(e.target.value)}\n                >\n                  <option value=\"\">State</option>\n                  {State &&\n                    State.getStatesOfCountry(country).map((item) => (\n                      <option key={item.isoCode} value={item.isoCode}>\n                        {item.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n\n            <input\n              type=\"submit\"\n              value=\"Continue\"\n              className=\"shippingBtn\"\n              disabled={state ? false : true}\n            />\n          </form>\n          \n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Shipping;","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title, description}) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n};\n\nexport default MetaData;"],"names":["addItemsToCart","id","quantity","alphabet","nameOne","nameTwo","dispatch","getState","axios","data","type","ADD_TO_CART","payload","product","_id","name","price","oldPrice","image","images","url","Stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","activeStep","steps","label","Typography","icon","LocalShipping","LibraryAddCheck","AccountBalance","Fragment","Stepper","alternativeLabel","style","boxSizing","map","item","index","Step","active","completed","StepLabel","color","history","useDispatch","alert","useAlert","useSelector","state","shippingInfo","useState","address","setAddress","city","setCity","setState","country","setCountry","pinCode","setPinCode","phoneNo","setPhoneNo","MetaData","title","CheckoutSteps","className","encType","onSubmit","e","preventDefault","length","error","push","Home","placeholder","required","value","onChange","target","LocationCity","PinDrop","size","Phone","Public","TransferWithinAStation","State","isoCode","disabled","description","content"],"sourceRoot":""}