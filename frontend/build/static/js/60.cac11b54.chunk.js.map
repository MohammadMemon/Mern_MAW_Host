{"version":3,"file":"static/js/60.cac11b54.chunk.js","mappings":"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","sources":["component/Admin/Sidebar.js","component/Admin/UsersList.js"],"sourcesContent":["import React  from \"react\";\nimport \"./Sidebar.css\";\nimport logo from \"../../images/logo.webp\";\nimport { Link } from \"react-router-dom\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"Myartworld\" />\n      </Link>\n      <Link to=\"/admin/dashboard\">\n        <p>\n          <DashboardIcon /> Dashboard\n        </p>\n      </Link>\n      <Link>\n        <TreeView\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ImportExportIcon />}\n        >\n          <TreeItem nodeId=\"1\" label=\"Products\">\n            <Link to=\"/admin/products\">\n              <TreeItem nodeId=\"2\" label=\"All\" icon={<PostAddIcon />} />\n            </Link>\n\n            <Link to=\"/admin/product\">\n              <TreeItem nodeId=\"3\" label=\"Create\" icon={<AddIcon />} />\n            </Link>\n          </TreeItem>\n        </TreeView>\n      </Link>\n      <Link to=\"/admin/orders\">\n        <p>\n          <ListAltIcon />\n          Orders\n        </p>\n      </Link>\n      <Link to=\"/admin/users\">\n        <p>\n          <PeopleIcon /> Users\n        </p>\n      </Link>\n      <Link to=\"/admin/reviews\">\n        <p>\n          <RateReviewIcon />\n          Reviews\n        </p>\n      </Link>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\n\nconst UsersList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, users } = useSelector((state) => state.allUsers);\n\n  const {\n    error: deleteError,\n    isDeleted,\n    message,\n  } = useSelector((state) => state.profile);\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(message);\n      history.push(\"/admin/users\");\n      dispatch({ type: DELETE_USER_RESET });\n    }\n\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\n\n  const columns = [\n    { field: \"id\", headerName: \"User ID\", minWidth: 180, flex: 0.8 },\n\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      minWidth: 200,\n      flex: 1,\n    },\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      minWidth: 150,\n      flex: 0.5,\n    },\n\n    {\n      field: \"role\",\n      headerName: \"Role\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.3,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"role\") === \"admin\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/user/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteUserHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  users &&\n    users.forEach((item) => {\n      rows.push({\n        id: item._id,\n        role: item.role,\n        email: item.email,\n        name: item.name,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL USERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL USERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UsersList;\n"],"names":["className","to","src","logo","alt","Dashboard","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ImportExport","TreeItem","nodeId","label","icon","PostAdd","Add","ListAlt","People","RateReview","history","dispatch","useDispatch","alert","useAlert","useSelector","state","allUsers","error","users","profile","deleteError","isDeleted","message","useEffect","clearErrors","success","push","type","DELETE_USER_RESET","getAllUsers","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","id","sortable","renderCell","Fragment","onClick","deleteUser","rows","forEach","item","_id","role","email","name","title","pageSize","disableSelectionOnClick","autoHeight"],"sourceRoot":""}