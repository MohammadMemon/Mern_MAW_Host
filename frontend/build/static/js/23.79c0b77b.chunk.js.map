{"version":3,"file":"static/js/23.79c0b77b.chunk.js","mappings":"kPAoJA,EA1IqB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACtB,GAAkCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,gBAAvDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,QAEhBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MAWd,OATAC,EAAAA,EAAAA,YAAU,WACJN,IACFI,EAAMJ,MAAMA,GACZE,GAASK,EAAAA,EAAAA,QAGXL,GAASM,EAAAA,EAAAA,IAAgBb,EAAMc,OAAOC,OACrC,CAACR,EAAUE,EAAOJ,EAAOL,EAAMc,OAAOC,MAGvC,SAAC,EAAAC,SAAD,UACGV,GACC,SAACW,EAAA,EAAD,KAEA,UAAC,EAAAD,SAAD,YACE,SAACE,EAAA,EAAD,CAAUC,MAAM,mBAChB,iBAAKC,UAAU,mBAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,UAACC,EAAA,EAAD,CAAYC,UAAU,KAAtB,oBACUlB,GAASA,EAAMmB,QAEzB,SAACF,EAAA,EAAD,6BACA,iBAAKD,UAAU,2BAAf,WACE,4BACE,kCACA,0BAAOhB,EAAMoB,MAAQpB,EAAMoB,KAAKC,WAElC,4BACE,mCACA,0BAAOrB,EAAMoB,MAAQpB,EAAMoB,KAAKE,YAElC,4BACE,mCACA,0BACGtB,EAAMuB,cAAgBvB,EAAMuB,aAAaC,cAG9C,4BACE,qCACA,0BACGxB,EAAMuB,cAAN,UACIvB,EAAMuB,aAAaE,QADvB,aACmCzB,EAAMuB,aAAaG,KADtD,aAC+D1B,EAAMuB,aAAazB,MADlF,aAC4FE,EAAMuB,aAAaI,QAD/G,aAC2H3B,EAAMuB,aAAaK,kBAIrJ,SAACX,EAAA,EAAD,uBACA,iBAAKD,UAAU,2BAAf,WACE,0BACE,cACEA,UACEhB,EAAM6B,aACuB,cAA7B7B,EAAM6B,YAAYC,OACd,aACA,WALR,SAQG9B,EAAM6B,aACsB,cAA7B7B,EAAM6B,YAAYC,OACd,OACA,gBAGR,4BACE,wCACA,0BAAO9B,EAAM+B,eAAiB/B,EAAM+B,oBAEtC,4BACE,sCACA,gCAAQ/B,EAAMgC,UAAYhC,EAAMgC,gBAElC,4BACE,sCACA,0BAAOhC,EAAMiC,YAAcjC,EAAMiC,iBAEnC,4BACE,sCACA,0BAAOjC,EAAMkC,eAAiBlC,EAAMkC,oBAEtC,4BACE,yCACA,0BAAOlC,EAAMmC,YAAcnC,EAAMmC,iBAEnC,4BACE,wCACA,0BAAOnC,EAAM6B,aAAe7B,EAAM6B,YAAYlB,YAIlD,SAACM,EAAA,EAAD,4BACA,gBAAKD,UAAU,2BAAf,UACE,0BACE,cACEA,UACEhB,EAAMoC,aAAqC,cAAtBpC,EAAMoC,YACvB,aACA,WAJR,SAOGpC,EAAMoC,aAAepC,EAAMoC,sBAMpC,iBAAKpB,UAAU,wBAAf,WACE,SAACC,EAAA,EAAD,4BACA,gBAAKD,UAAU,iCAAf,SACGhB,EAAMqC,YACLrC,EAAMqC,WAAWC,KAAI,SAACC,GAAD,OACnB,4BACE,gBAAKC,IAAKD,EAAKE,MAAOC,IAAI,aAC1B,UAAC,KAAD,CAAMC,GAAE,mBAAcJ,EAAKK,SAA3B,UACGL,EAAKlB,MACN,gCAAQkB,EAAKM,aACb,gCAAQN,EAAKO,YACb,gCAAQP,EAAKQ,cACP,KACR,4BACGR,EAAKS,SADR,YACsBT,EAAKU,MAD3B,KACoC,KAClC,kCAAKV,EAAKU,MAAQV,EAAKS,iBAVjBT,EAAKK","sources":["component/Order/OrderDetails.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport \"./OrderDetails.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport { getOrderDetails, clearErrors } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\n\nconst OrderDetails = ({ match }) => {\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Order Details\" />\n          <div className=\"orderDetailsPage\">\n            <div className=\"orderDetailsContainer\">\n              <Typography component=\"h1\">\n                Order #{order && order._id}\n              </Typography>\n              <Typography>Shipping Info</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p>Name:</p>\n                  <span>{order.user && order.user.name}</span>\n                </div>\n                <div>\n                  <p>Email:</p>\n                  <span>{order.user && order.user.email}</span>\n                </div>\n                <div>\n                  <p>Phone:</p>\n                  <span>\n                    {order.shippingInfo && order.shippingInfo.phoneNo}\n                  </span>\n                </div>\n                <div>\n                  <p>Address:</p>\n                  <span>\n                    {order.shippingInfo &&\n                      `${order.shippingInfo.address}, ${order.shippingInfo.city}, ${order.shippingInfo.state}, ${order.shippingInfo.pinCode}, ${order.shippingInfo.country}`}\n                  </span>\n                </div>\n              </div>\n              <Typography>Payment</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.paymentInfo &&\n                      order.paymentInfo.status === \"succeeded\" \n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.paymentInfo &&\n                    order.paymentInfo.status === \"succeeded\"\n                      ? \"PAID\"\n                      : \"NOT PAID\"}\n                  </p>\n                </div>\n                <div>\n                  <p>Cart Total:</p>\n                  <span>{order.totalOldPrice && order.totalOldPrice}</span>\n                </div>\n                <div>\n                  <p>Discount:</p>\n                  <span>-{order.discount && order.discount}</span>\n                </div>\n                <div>\n                  <p>Subtotal:</p>\n                  <span>{order.itemsPrice && order.itemsPrice}</span>\n                </div>\n                <div>\n                  <p>Shipping:</p>\n                  <span>{order.shippingPrice && order.shippingPrice}</span>\n                </div>\n                <div>\n                  <p>Amount Paid:</p>\n                  <span>{order.totalPrice && order.totalPrice}</span>\n                </div>\n                <div>\n                  <p>Payment Id:</p>\n                  <span>{order.paymentInfo && order.paymentInfo.id}</span>\n                </div>\n              </div>\n\n              <Typography>Order Status</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.orderStatus && order.orderStatus === \"Delivered\"\n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.orderStatus && order.orderStatus}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"orderDetailsCartItems\">\n              <Typography>Order Items:</Typography>\n              <div className=\"orderDetailsCartItemsContainer\">\n                {order.orderItems &&\n                  order.orderItems.map((item) => (\n                    <div key={item.product}>\n                      <img src={item.image} alt=\"Product\" />\n                      <Link to={`/product/${item.product}`}>\n                        {item.name}\n                        <span> {item.alphabet}</span>  \n                        <span> {item.nameOne}</span> \n                        <span> {item.nameTwo}</span> \n                      </Link>{\" \"}\n                      <span>\n                        {item.quantity} X ₹{item.price} ={\" \"}\n                        <b>₹{item.price * item.quantity}</b>\n                      </span>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default OrderDetails;"],"names":["match","useSelector","state","orderDetails","order","error","loading","dispatch","useDispatch","alert","useAlert","useEffect","clearErrors","getOrderDetails","params","id","Fragment","Loader","MetaData","title","className","Typography","component","_id","user","name","email","shippingInfo","phoneNo","address","city","pinCode","country","paymentInfo","status","totalOldPrice","discount","itemsPrice","shippingPrice","totalPrice","orderStatus","orderItems","map","item","src","image","alt","to","product","alphabet","nameOne","nameTwo","quantity","price"],"sourceRoot":""}