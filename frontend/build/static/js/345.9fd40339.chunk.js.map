{"version":3,"file":"static/js/345.9fd40339.chunk.js","mappings":"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","sources":["component/Admin/UpdateProduct.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  clearErrors,\n  updateProduct,\n  getProductDetails,\n} from \"../../actions/productAction\";\nimport \"./newProduct.css\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_PRODUCT_RESET } from \"../../constants/productConstants\";\n\nconst UpdateProduct = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { error, product } = useSelector((state) => state.productDetails);\n\n  const {\n    loading,\n    error: updateError,\n    isUpdated,\n  } = useSelector((state) => state.product);\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [oldPrice, setoldPrice] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [Stock, setStock] = useState(0);\n  const [images, setImages] = useState([]);\n  const [oldImages, setOldImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n\n  const categories = [\n    \"Laptop\",\n    \"Footwear\",\n    \"Bottom\",\n    \"Tops\",\n    \"Attire\",\n    \"Camera\",\n    \"SmartPhones\",\n  ];\n\n  const productId = match.params.id;\n\n  useEffect(() => {\n    if (product && product._id !== productId) {\n      dispatch(getProductDetails(productId));\n    } else {\n      setName(product.name);\n      setDescription(product.description);\n      setPrice(product.price);\n      setoldPrice(product.oldPrice);\n      setCategory(product.category);\n      setStock(product.Stock);\n      setOldImages(product.images);\n      setTags(product.tags)\n\n    }\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Product Updated Successfully\");\n      history.push(\"/admin/products\");\n      dispatch({ type: UPDATE_PRODUCT_RESET });\n    }\n  }, [\n    dispatch,\n    alert,\n    error,\n    history,\n    isUpdated,\n    productId,\n    product,\n    updateError,\n  ]);\n\n  const updateProductSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"name\", name);\n    myForm.set(\"price\", price);\n    myForm.set(\"description\", description);\n    myForm.set(\"tags\", tags);\n    myForm.set(\"category\", category);\n    myForm.set(\"Stock\", Stock);\n    myForm.set(\"oldPrice\", oldPrice);\n\n    images.forEach((image) => {\n      myForm.append(\"images\", image);\n    });\n    dispatch(updateProduct(productId, myForm));\n  };\n\n  const updateProductImagesChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    setImages([]);\n    setImagesPreview([]);\n    setOldImages([]);\n\n    files.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview((old) => [...old, reader.result]);\n          setImages((old) => [...old, reader.result]);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    <Fragment>\n      <MetaData title=\"Update Product\" />\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"newProductContainer\">\n          <form\n            className=\"createProductForm\"\n            encType=\"multipart/form-data\"\n            onSubmit={updateProductSubmitHandler}\n          >\n            <h1>Update Product</h1>\n\n            <div>\n              <SpellcheckIcon />\n              <input\n                type=\"text\"\n                placeholder=\"Product Name\"\n                required\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div>\n              <MoneyOffIcon/>\n              <input\n                type=\"number\"\n                placeholder=\"Real Price\"\n                required\n                onChange={(e) => setoldPrice(e.target.value)}\n                value={oldPrice}\n              />\n            </div>\n            <div>\n              <AttachMoneyIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Discounted Price\"\n                required\n                onChange={(e) => setPrice(e.target.value)}\n                value={price}\n              />\n            </div>\n\n            <div>\n              <DescriptionIcon />\n\n              <textarea\n                placeholder=\"Product Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                cols=\"30\"\n                rows=\"1\"\n              ></textarea>\n            </div>\n            <div>\n              <ShowChartIcon />\n\n              <textarea\n                placeholder=\"Product Keywords use ',' in between.\"\n                value={tags}\n                onChange={(e) => setTags(e.target.value)}\n                cols=\"30\"\n                rows=\"1\"\n              ></textarea>\n            </div>\n\n            <div>\n              <AccountTreeIcon />\n              <select\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              >\n                <option value=\"\">Change Category</option>\n                {categories.map((cate) => (\n                  <option key={cate} value={cate}>\n                    {cate}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <StorageIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Stock\"\n                required\n                onChange={(e) => setStock(e.target.value)}\n                value={Stock}\n              />\n            </div>\n\n            <div id=\"createProductFormFile\">\n              <input\n                type=\"file\"\n                name=\"avatar\"\n                accept=\"image/*\"\n                onChange={updateProductImagesChange}\n                multiple\n              />\n            </div>\n\n            <div id=\"createProductFormImage\">\n              {oldImages &&\n                oldImages.map((image, index) => (\n                  <img key={index} src={image.url} alt=\"Old Product Preview\" />\n                ))}\n            </div>\n\n            <div id=\"createProductFormImage\">\n              {imagesPreview.map((image, index) => (\n                <img key={index} src={image} alt=\"Product Preview\" />\n              ))}\n            </div>\n\n            <Button\n              id=\"createProductBtn\"\n              type=\"submit\"\n              disabled={loading ? true : false}\n            >\n              Update\n            </Button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProduct;\n"],"names":["history","match","dispatch","useDispatch","alert","useAlert","useSelector","state","productDetails","error","product","loading","updateError","isUpdated","useState","name","setName","price","setPrice","oldPrice","setoldPrice","description","setDescription","tags","setTags","category","setCategory","Stock","setStock","images","setImages","oldImages","setOldImages","imagesPreview","setImagesPreview","productId","params","id","useEffect","_id","getProductDetails","clearErrors","success","push","type","UPDATE_PRODUCT_RESET","Fragment","title","className","encType","onSubmit","e","preventDefault","myForm","FormData","set","forEach","image","append","updateProduct","placeholder","required","value","onChange","target","cols","rows","map","cate","accept","files","Array","from","file","reader","FileReader","onload","readyState","old","result","readAsDataURL","multiple","index","src","url","alt","disabled"],"sourceRoot":""}